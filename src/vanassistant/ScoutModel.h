#pragma once

#include "../../include/IDrzEngine.h"

#include "Model.h"
#include <cmath>
#include <iostream>
#include <queue>

struct animangleduration {
  float angle;
  float duration;
};

class ScoutJawModel : public Model {
  public:
  
    std::vector<vec3d> verts = {
    {0.512694, -0.627368, 0.125377},
    {0.0094212, -1.0198, 0.24116},
    {0.0094212, -0.627368, 0.140065},
    {-0.493855, -0.627368, 0.125377},
    {0.523019, -1.01965, 0.226444},
    {0.317077, -1.12485, 1.06038},
    {0.0094212, -1.12499, 1.11917},
    {0.337511, -0.578394, 1.14723},
    {0.0094212, -0.578394, 1.20599},
    {-0.298238, -1.12485, 1.06038},
    {-0.50418, -1.01965, 0.226444},
    {-0.318672, -0.578394, 1.14723},
    };
    std::vector<face> faces = {
      {1, 5, 2},
      {1, 2, 3},
      {2, 4, 3},
      {2, 11, 4},
      {2, 5, 6},
      {2, 6, 7},
      {10, 2, 7},
      {10, 11, 2},
      {8, 5, 1},
      {8, 6, 5},
      {7, 6, 8},
      {7, 8, 9},
      {12, 7, 9},
      {12, 10, 7},
      {11, 10, 12},
      {11, 12, 4},
    };

    ScoutJawModel(IDrzEngine* engine) : engine(engine), Model(&verts, &faces){ 
      SetupModel();
    }

    //Set the current jaw angle
    void SetAngle(float angle) {
      //TODO
      currentAnimationAngle = angle;
    }

    void Update(float fElapsedTime) override {
      if (isAnimating) {
        _updateAnimation();
      } else {
        if (!animQueue.empty()) {
          _startAnimation();
        } 
      } 



      // Rotate the model
      //currentAnimationAngle += 1.0f * 0.01f;

      // Rotation Z
      matRotZ.m[0][0] = cosf(fTheta);
      matRotZ.m[0][1] = sinf(fTheta);
      matRotZ.m[1][0] = -sinf(fTheta);
      matRotZ.m[1][1] = cosf(fTheta);
      matRotZ.m[2][2] = 1;
      matRotZ.m[3][3] = 1;

      // Rotation X
      matRotX.m[0][0] = 1;
      matRotX.m[1][1] = cosf(currentAnimationAngle * 0.5f);
      matRotX.m[1][2] = sinf(currentAnimationAngle * 0.5f);
      matRotX.m[2][1] = -sinf(currentAnimationAngle * 0.5f);
      matRotX.m[2][2] = cosf(currentAnimationAngle * 0.5f);
    }

    void QueueAnimation(float angle, float duration) {
      animQueue.push({angle,duration});
    }

  private:
    IDrzEngine* engine;
    Model* model;
    bool isAnimating;
    float currentAnimationAngle;        //angle of the current animation keyframe
    float currentAnimationDuration;     //in seconds
    double currentAnimationStartTime;   //in ms

    float fTheta = 2*3.14159f;

    std::queue<animangleduration> animQueue;

    // In your class, add a vector to store the initial positions of vertices
    float lastAngle;

    //move the vertices according toward current animation keyframe using speed as a factor
    void _updateAnimation() {

      auto now = engine->Now();
      double elapsedTime = (now - currentAnimationStartTime)/1000.0f; //in seconds
      double t = elapsedTime/currentAnimationDuration;
      
      //if animation reached duration, stop it
      if (t >= 1.0f) {
        t = 1.0f;
        isAnimating = false;
      }
      //TODO
    }

    void _startAnimation() {

      //pop the next animation from the queue
      animangleduration akd = animQueue.front();
      animQueue.pop();

      // Set the current animation index and duration
      currentAnimationAngle = akd.angle;
      currentAnimationDuration = akd.duration;
      currentAnimationStartTime = engine->Now();

      // Save the initial positions of vertices
      lastAngle = 0;

      isAnimating = true;
    }
};
 
//3d face model including animated subparts
class ScoutHeadModel : public Model {
  public:
    // clang-format off 
    //Hardcoded face model vertices
    std::vector<vec3d> verts = {
    {0.22054, -1.03702, -0.951523},
    {0.171371, -0.326081, -0.272689},
    {0.22054, -1.24452, -0.700963},
    {-0.201701, -1.24452, -0.700963},
    {-0.176468, -0.493157, -0.120859},
    {0.171371, -0.509155, -0.106319},
    {0.251737, -1.22637, -0.722848},
    {0.195307, -0.493157, -0.120859},
    {0.195307, -0.342079, -0.258149},
    {0.251737, -1.05517, -0.929635},
    {-0.176468, -0.342076, -0.258149},
    {-0.232898, -1.05517, -0.929635},
    {-0.152532, -0.326081, -0.272689},
    {-0.201701, -1.03702, -0.951523},
    {-0.152532, -0.509155, -0.106319},
    {-0.232898, -1.22637, -0.722848},
    {0.522364, -0.86422, 1.39883},
    {1.40425, -0.125878, 0.221929},
    {1.40425, -0.246229, 0.0001044},
    {1.40425, 0.235163, 0.0001044},
    {1.40425, -0.125878, -0.22172},
    {1.40425, 0.114811, -0.22172},
    {1.18226, -0.125878, -0.22172},
    {1.18226, 0.114811, -0.22172},
    {1.18226, 0.235163, 0.0001044},
    {1.18226, 0.114811, 0.221929},
    {1.40425, 0.114811, 0.221929},
    {1.18226, -0.125878, 0.221929},
    {1.18226, -0.246229, 0.0001044},
    {0.381413, 0.25848, 1.11405},
    {0.344952, 0.277546, 1.12593},
    {0.369864, 0.281668, 1.12593},
    {0.390985, 0.293407, 1.12593},
    {0.412322, 0.275659, 1.11405},
    {0.405097, 0.310975, 1.12593},
    {0.405097, 0.352433, 1.12593},
    {0.410054, 0.331704, 1.12593},
    {0.440226, 0.331704, 1.11405},
    {0.369864, 0.38174, 1.12593},
    {0.344952, 0.385862, 1.12593},
    {0.320036, 0.38174, 1.12593},
    {0.344952, 0.252446, 1.11405},
    {0.390985, 0.369997, 1.12593},
    {0.298915, 0.369997, 1.12593},
    {0.344952, 0.331704, 1.13449},
    {0.27985, 0.331704, 1.12593},
    {0.284803, 0.352433, 1.12593},
    {0.308491, 0.25848, 1.11405},
    {0.277582, 0.275659, 1.11405},
    {0.320036, 0.281668, 1.12593},
    {0.298915, 0.293407, 1.12593},
    {0.284803, 0.310975, 1.12593},
    {0.249674, 0.331704, 1.11405},
    {0.512694, -0.627368, 0.125377},
    {0.0094212, -0.627368, 0.140065},
    {-0.493855, -0.627368, 0.125377},
    {0.29165, -0.632444, -0.0366264},
    {0.29151, -0.100656, -0.264438},
    {-0.272671, -0.100656, -0.264438},
    {-0.297104, -0.55521, -0.465696},
    {0.331002, -0.0425952, -0.708066},
    {0.337511, -0.578394, 1.14723},
    {0.0094212, -0.578394, 1.20599},
    {-0.318672, -0.578394, 1.14723},
    {0.622469, -0.572947, -0.36702},
    {0.315943, -0.55521, -0.465696},
    {0.0094212, 0.448751, -1.0185},
    {0.0094212, -0.026496, -0.772974},
    {-0.312163, -0.0425952, -0.708066},
    {-0.786578, -0.0587016, -0.578174},
    {-0.239486, 0.578052, 1.06363},
    {-0.785167, 0.330376, 1.57643},
    {-0.247079, 0.579456, 1.84405},
    {0.258325, 0.578052, 1.06363},
    {0.265918, 0.579456, 1.84405},
    {-0.578516, -0.709679, 0.383864},
    {-0.272812, -0.632444, -0.0366264},
    {0.365306, -0.577415, 1.21491},
    {-0.346468, -0.577415, 1.21491},
    {0.912661, 0.435294, 0.68153},
    {-0.885265, 0.435294, 1.57643},
    {0.0094212, 0.553511, -1.08649},
    {-0.921175, 0.392742, -0.142168},
    {-0.804773, -0.0858024, 0.0770868},
    {-0.60363, -0.572947, -0.36702},
    {0.597355, -0.709679, 0.383864},
    {0.517608, -0.121529, 0.95053},
    {0.800683, 0.334361, 0.686146},
    {0.823612, -0.0858024, 0.0770868},
    {0.805417, -0.0587016, -0.578174},
    {0.940018, 0.392742, -0.142168},
    {0.0094212, 1.43082, -1.00562},
    {0.0094212, 1.35696, 0.098874},
    {-0.838163, 1.36538, -0.0269388},
    {-0.745394, 1.30703, 0.845615},
    {0.302904, 1.28216, 1.21738},
    {-0.284062, 1.28216, 1.21738},
    {0.764233, 1.30703, 0.845615},
    {0.857002, 1.36538, -0.0269388},
    {0.742892, 1.41953, -0.82715},
    {-0.251658, 0.707537, 1.0926},
    {-0.893822, 0.435294, 0.68153},
    {0.270497, 0.707537, 1.0926},
    {-0.316908, 0.277553, 1.12595},
    {-0.251802, 0.331711, 1.12595},
    {-0.353369, 0.258487, 1.11407},
    {-0.291992, 0.281675, 1.12595},
    {-0.270871, 0.293414, 1.12595},
    {-0.280447, 0.258484, 1.11407},
    {-0.256759, 0.310982, 1.12595},
    {-0.228884, 0.301378, 1.11406},
    {-0.256759, 0.352433, 1.12595},
    {-0.228881, 0.362041, 1.11406},
    {-0.270871, 0.370004, 1.12595},
    {-0.34182, 0.381744, 1.12595},
    {-0.316908, 0.331711, 1.13451},
    {-0.362941, 0.370004, 1.12596},
    {-0.377053, 0.352436, 1.12596},
    {-0.38201, 0.331711, 1.12596},
    {-0.280444, 0.404939, 1.11407},
    {-0.291992, 0.381744, 1.12595},
    {-0.316904, 0.385866, 1.12595},
    {-0.384275, 0.387752, 1.11407},
    {-0.362941, 0.293414, 1.12596},
    {-0.377053, 0.31099, 1.12596},
    {-0.404932, 0.301381, 1.11407},
    {-0.34182, 0.281675, 1.12595},
    {-0.384278, 0.275663, 1.11407},
    {-0.724054, 1.41953, -0.82715},
    {-1.00853, 0.492883, -0.179845},
    {0.810497, 0.433714, -0.837104},
    {1.02737, 0.492883, -0.179845},
    {0.804006, 0.330376, 1.57643},
    {1.18806, -0.14881, 0.122375},
    {1.18242, -0.371405, 0.808668},
    {1.00434, -0.575676, 1.17332},
    {0.997682, -0.697309, 1.10665},
    {0.82422, -0.6592, 1.32053},
    {0.82422, -0.780671, 1.25371},
    {0.539741, -0.760525, 1.49797},
    {0.539741, -0.881996, 1.43114},
    {1.18805, -0.0272952, 0.189227},
    {1.13699, -0.368161, 0.80204},
    {1.12899, -0.479045, 1.00154},
    {0.971813, -0.561906, 1.14795},
    {0.522364, -0.742752, 1.46566},
    {-0.372269, 0.220525, 1.0476},
    {-0.316926, 0.211367, 0.822492},
    {-0.372287, 0.220525, 0.822496},
    {-0.419224, 0.246614, 0.822499},
    {-0.450583, 0.28566, 0.822499},
    {-0.461592, 0.331715, 0.822503},
    {-0.45058, 0.377766, 0.822499},
    {-0.41922, 0.416812, 0.822499},
    {-0.450562, 0.377766, 1.04761},
    {-0.372283, 0.442897, 0.822496},
    {-0.316901, 0.452056, 1.0476},
    {-0.261558, 0.442894, 0.822488},
    {-0.316922, 0.452056, 0.822492},
    {-0.183265, 0.377762, 0.822485},
    {-0.214625, 0.416812, 0.822488},
    {-0.183247, 0.377762, 1.04759},
    {-0.172253, 0.331711, 0.822485},
    {-0.183269, 0.285656, 0.822485},
    {-0.183247, 0.285656, 1.04759},
    {-0.214628, 0.246611, 0.822488},
    {-0.261562, 0.220525, 0.822488},
    {-0.316908, 0.211367, 1.0476},
    {1.14155, -0.439888, 0.039582},
    {1.14155, -0.39263, 0.213469},
    {1.14155, -0.286438, 0.35487},
    {1.14155, -0.13748, 0.44226},
    {1.14155, -0.206028, -0.411836},
    {1.14155, 0.327834, 0.299038},
    {1.14155, 0.428825, -0.0393732},
    {1.14155, 0.409957, 0.140519},
    {1.14155, 0.126414, -0.442051},
    {0.268333, 0.706104, 1.84587},
    {1.14228, -0.0276228, 0.189022},
    {1.18733, 0.0487008, 0.181361},
    {1.14155, 0.0486972, 0.181357},
    {1.18733, 0.153252, 0.087462},
    {1.14155, 0.153252, 0.087462},
    {1.18733, 0.16479, -0.0576072},
    {1.14155, 0.076554, -0.168869},
    {1.14155, 0.164786, -0.0576072},
    {1.18733, -0.0597636, -0.181148},
    {1.18733, 0.0765648, -0.168869},
    {1.14155, -0.0597636, -0.181148},
    {1.18733, -0.164311, -0.0872496},
    {1.14155, -0.164318, -0.0872532},
    {1.14155, -0.175853, 0.057816},
    {1.18733, -0.175853, 0.057816},
    {0.904108, 0.435294, 1.57643},
    {-0.249494, 0.706104, 1.84587},
    {0.489622, 0.331704, 1.04757},
    {0.426316, 0.264017, 1.05864},
    {0.44725, 0.246607, 1.04757},
    {0.263585, 0.264017, 1.05864},
    {0.200282, 0.331704, 1.04757},
    {0.289588, 0.442886, 1.04757},
    {0.876733, 0.54184, -0.901948},
    {-0.791658, 0.433714, -0.837104},
    {-0.857891, 0.54184, -0.901948},
    {0.242654, 0.416804, 0.822467},
    {0.242654, 0.416804, 1.04757},
    {0.211295, 0.377762, 0.822467},
    {0.211295, 0.377762, 1.04757},
    {0.200282, 0.331704, 0.822467},
    {0.211295, 0.285649, 0.822467},
    {0.211295, 0.285649, 1.04757},
    {0.289588, 0.220518, 0.822467},
    {0.242654, 0.246607, 0.822467},
    {0.289588, 0.220518, 1.04757},
    {0.242654, 0.246607, 1.04757},
    {0.344952, 0.211356, 0.822467},
    {0.400313, 0.220518, 0.822467},
    {0.400313, 0.220518, 1.04757},
    {0.344952, 0.211356, 1.04757},
    {0.44725, 0.246607, 0.822467},
    {0.478609, 0.285649, 1.04757},
    {0.478609, 0.285649, 0.822467},
    {0.489622, 0.331704, 0.822467},
    {0.478609, 0.377762, 0.822467},
    {0.478609, 0.377762, 1.04757},
    {0.44725, 0.416804, 0.822467},
    {0.44725, 0.416804, 1.04757},
    {0.400313, 0.442886, 0.822467},
    {0.344952, 0.452048, 0.822467},
    {0.400313, 0.442886, 1.04757},
    {0.289588, 0.442886, 0.822467},
    {0.344952, 0.452048, 1.04757},
    {-0.360936, 0.420145, 1.05867},
    {-0.353365, 0.404939, 1.11407},
    {-0.412182, 0.331715, 1.11407},
    {-0.404928, 0.362041, 1.11407},
    {-0.431971, 0.331715, 1.05868},
    {-0.398272, 0.264024, 1.05867},
    {-0.36094, 0.243274, 1.05867},
    {-0.316904, 0.235991, 1.05867},
    {-0.316908, 0.252454, 1.11407},
    {-0.249538, 0.275663, 1.11407},
    {-0.210596, 0.295078, 1.05866},
    {-0.201838, 0.331711, 1.05866},
    {-0.22163, 0.331711, 1.11406},
    {-0.235537, 0.399395, 1.05867},
    {-0.249534, 0.387752, 1.11407},
    {-0.272869, 0.420145, 1.05867},
    {-0.316904, 0.410969, 1.11407},
    {-0.419198, 0.416812, 1.0476},
    {-0.398268, 0.399395, 1.05867},
    {-0.423212, 0.368345, 1.05868},
    {-0.423212, 0.295081, 1.05868},
    {-0.461574, 0.331715, 1.04761},
    {-0.450562, 0.28566, 1.04761},
    {-0.419202, 0.246614, 1.0476},
    {-0.235541, 0.264024, 1.05867},
    {-0.272873, 0.243274, 1.05867},
    {-0.261544, 0.220525, 1.0476},
    {-0.21461, 0.246611, 1.04759},
    {-0.172235, 0.331711, 1.04759},
    {-0.214607, 0.416812, 1.04759},
    {-0.210593, 0.368341, 1.05866},
    {-0.26154, 0.442894, 1.0476},
    {-0.316901, 0.427435, 1.05867},
    {-0.372265, 0.442897, 1.0476},
    {1.14155, 0.381564, -0.213257},
    {1.14155, 0.275368, -0.354661},
    {1.14155, -0.0426348, -0.462128},
    {1.09066, -0.228758, -0.458532},
    {1.14155, -0.3389, -0.298829},
    {1.14155, -0.421024, -0.14031},
    {1.09066, -0.468119, -0.156229},
    {1.09066, -0.436507, 0.237654},
    {1.14155, 0.0315648, 0.462341},
    {1.14155, 0.194962, 0.412045},
    {1.09066, 0.457049, 0.156438},
    {-0.307087, 0.279911, 0.950206},
    {-0.781844, 0.334361, 0.686146},
    {-0.229187, -0.148752, 1.09104},
    {-0.498769, -0.121529, 0.95053},
    {-0.168523, -0.577415, 1.26433},
    {0.187362, -0.577415, 1.26433},
    {0.248026, -0.148752, 1.09104},
    {0.325926, 0.279911, 0.950206},
    {1.09066, 0.307213, -0.394873},
    {0.640163, 0.317678, -0.408103},
    {1.09066, 0.141368, -0.492174},
    {0.640163, 0.146279, -0.508658},
    {1.09066, -0.0468396, -0.514526},
    {0.640163, -0.0482256, -0.531763},
    {0.640163, -0.236239, -0.473893},
    {1.09066, -0.376693, -0.332716},
    {0.640163, -0.389131, -0.343861},
    {0.640163, -0.48362, -0.161464},
    {1.09066, -0.489125, 0.0440568},
    {0.640163, -0.505328, 0.0455328},
    {0.640163, -0.328759, 0.408312},
    {0.640163, -0.45095, 0.24561},
    {1.09066, -0.318283, 0.395086},
    {0.640163, -0.157363, 0.508871},
    {1.09066, -0.152435, 0.492383},
    {0.640163, 0.0371448, 0.531972},
    {1.09066, 0.0357732, 0.514735},
    {0.640163, 0.378047, 0.34407},
    {0.640163, 0.225155, 0.474102},
    {1.09066, 0.217688, 0.458741},
    {1.09066, 0.365623, 0.332924},
    {0.640163, 0.472536, 0.161676},
    {1.09066, 0.478058, -0.043848},
    {0.640163, 0.494248, -0.0453204},
    {1.09066, 0.425437, -0.237445},
    {0.640163, 0.43987, -0.245401},
    {1.14228, -0.149144, 0.122166},
    {1.18652, -0.493412, 0.742831},
    {1.08906, -0.593323, 0.921017},
    {1.13028, -0.600757, 0.93514},
    {0.965153, -0.683536, 1.08129},
    {1.14109, -0.490172, 0.7362},
    {1.08777, -0.471607, 0.987419},
    {0.796684, -0.64426, 1.29315},
    {0.796684, -0.765734, 1.22632},
    {0.381413, 0.404928, 1.11405},
    {0.426316, 0.399391, 1.05864},
    {0.412322, 0.387745, 1.11405},
    {0.432976, 0.362034, 1.11405},
    {0.45126, 0.368338, 1.05864},
    {0.460019, 0.331704, 1.05864},
    {0.432976, 0.301374, 1.11405},
    {0.45126, 0.295074, 1.05864},
    {0.388987, 0.24327, 1.05864},
    {0.344952, 0.23598, 1.05864},
    {0.300917, 0.24327, 1.05864},
    {0.238644, 0.295074, 1.05864},
    {0.256928, 0.301374, 1.11405},
    {0.229882, 0.331704, 1.05864},
    {0.256928, 0.362034, 1.11405},
    {0.238644, 0.368338, 1.05864},
    {0.263585, 0.399391, 1.05864},
    {0.277582, 0.387745, 1.11405},
    {0.308491, 0.404928, 1.11405},
    {0.300917, 0.420142, 1.05864},
    {0.344952, 0.427428, 1.05864},
    {0.344952, 0.410962, 1.11405},
    {0.388987, 0.420142, 1.05864},
    };
    std::vector<face> faces = {
    {6, 7, 8},
    {8, 10, 9},
    {8, 7, 10},
    {1, 13, 2},
    {1, 14, 13},
    {15, 3, 6},
    {15, 4, 3},
    {12, 5, 11},
    {12, 16, 5},
    {6, 3, 7},
    {1, 9, 10},
    {1, 2, 9},
    {11, 14, 12},
    {11, 13, 14},
    {16, 15, 5},
    {16, 4, 15},
    {36, 37, 38},
    {124, 125, 126},
    {157, 158, 159},
    {217, 218, 219},
    {311, 312, 313},
    {17, 140, 146},
    {17, 141, 140},
    {19, 27, 18},
    {19, 20, 27},
    {19, 22, 20},
    {19, 21, 22},
    {21, 24, 22},
    {21, 23, 24},
    {22, 25, 20},
    {22, 24, 25},
    {20, 26, 27},
    {20, 25, 26},
    {27, 28, 18},
    {27, 26, 28},
    {18, 29, 19},
    {18, 28, 29},
    {19, 23, 21},
    {19, 29, 23},
    {33, 30, 34},
    {33, 32, 30},
    {30, 31, 42},
    {30, 32, 31},
    {32, 45, 31},
    {33, 45, 32},
    {35, 45, 33},
    {35, 33, 34},
    {35, 34, 329},
    {38, 35, 329},
    {38, 37, 35},
    {36, 45, 37},
    {43, 45, 36},
    {39, 45, 43},
    {323, 39, 43},
    {40, 39, 323},
    {40, 323, 344},
    {341, 40, 344},
    {341, 41, 40},
    {37, 45, 35},
    {41, 45, 40},
    {40, 45, 39},
    {31, 48, 42},
    {323, 43, 325},
    {325, 43, 36},
    {325, 36, 326},
    {36, 38, 326},
    {44, 41, 341},
    {44, 45, 41},
    {47, 45, 44},
    {46, 45, 47},
    {53, 46, 47},
    {52, 46, 53},
    {52, 53, 335},
    {49, 52, 335},
    {49, 51, 52},
    {48, 51, 49},
    {48, 50, 51},
    {31, 50, 48},
    {31, 45, 50},
    {50, 45, 51},
    {51, 45, 52},
    {52, 45, 46},
    {53, 47, 337},
    {47, 340, 337},
    {47, 44, 340},
    {44, 341, 340},
    {57, 59, 58},
    {57, 77, 59},
    {66, 58, 61},
    {66, 57, 58},
    {59, 60, 69},
    {59, 77, 60},
    {61, 69, 68},
    {69, 61, 58},
    {69, 58, 59},
    {66, 90, 65},
    {66, 61, 90},
    {61, 131, 90},
    {67, 131, 61},
    {67, 61, 68},
    {69, 67, 68},
    {69, 203, 67},
    {203, 69, 70},
    {70, 69, 60},
    {70, 60, 85},
    {71, 72, 279},
    {71, 73, 72},
    {73, 71, 74},
    {73, 74, 75},
    {133, 75, 74},
    {133, 74, 88},
    {76, 77, 57},
    {77, 76, 85},
    {77, 85, 60},
    {65, 57, 66},
    {65, 86, 57},
    {76, 57, 86},
    {79, 76, 86},
    {79, 86, 78},
    {79, 78, 283},
    {79, 283, 282},
    {100, 132, 202},
    {100, 99, 132},
    {80, 132, 99},
    {80, 99, 98},
    {203, 130, 204},
    {203, 83, 130},
    {83, 102, 130},
    {83, 279, 102},
    {279, 81, 102},
    {279, 72, 81},
    {129, 82, 204},
    {129, 92, 82},
    {82, 92, 100},
    {82, 100, 202},
    {281, 76, 79},
    {70, 83, 203},
    {70, 84, 83},
    {84, 279, 83},
    {84, 281, 279},
    {281, 84, 76},
    {85, 76, 84},
    {85, 84, 70},
    {86, 87, 78},
    {89, 86, 65},
    {86, 89, 87},
    {89, 88, 87},
    {89, 91, 88},
    {90, 91, 89},
    {90, 131, 91},
    {89, 65, 90},
    {100, 92, 93},
    {129, 93, 92},
    {129, 94, 93},
    {95, 93, 94},
    {95, 97, 93},
    {96, 93, 97},
    {98, 93, 96},
    {98, 99, 93},
    {100, 93, 99},
    {101, 95, 102},
    {101, 97, 95},
    {103, 97, 101},
    {103, 96, 97},
    {98, 96, 103},
    {98, 103, 80},
    {107, 116, 104},
    {108, 116, 107},
    {110, 116, 108},
    {105, 116, 110},
    {112, 116, 105},
    {104, 127, 106},
    {104, 106, 241},
    {107, 104, 241},
    {107, 241, 109},
    {108, 107, 109},
    {108, 109, 242},
    {110, 108, 242},
    {110, 242, 111},
    {105, 110, 111},
    {105, 111, 245},
    {112, 105, 245},
    {112, 245, 113},
    {247, 112, 113},
    {247, 114, 112},
    {114, 116, 112},
    {121, 116, 114},
    {122, 116, 121},
    {115, 116, 122},
    {117, 116, 115},
    {118, 116, 117},
    {119, 116, 118},
    {125, 116, 119},
    {121, 114, 247},
    {121, 247, 120},
    {249, 121, 120},
    {249, 122, 121},
    {234, 122, 249},
    {234, 115, 122},
    {123, 115, 234},
    {123, 117, 115},
    {236, 117, 123},
    {236, 118, 117},
    {235, 118, 236},
    {235, 119, 118},
    {126, 119, 235},
    {126, 125, 119},
    {124, 116, 125},
    {127, 116, 124},
    {104, 116, 127},
    {127, 128, 106},
    {127, 124, 128},
    {124, 126, 128},
    {130, 129, 204},
    {130, 94, 129},
    {102, 94, 130},
    {102, 95, 94},
    {132, 131, 202},
    {132, 91, 131},
    {91, 132, 80},
    {91, 80, 88},
    {194, 88, 80},
    {194, 133, 88},
    {135, 134, 142},
    {135, 315, 134},
    {315, 135, 144},
    {315, 144, 317},
    {317, 144, 136},
    {317, 136, 137},
    {137, 136, 138},
    {137, 138, 139},
    {139, 138, 140},
    {139, 140, 141},
    {143, 142, 179},
    {143, 135, 142},
    {320, 135, 143},
    {320, 144, 135},
    {145, 144, 320},
    {145, 136, 144},
    {321, 136, 145},
    {321, 138, 136},
    {138, 321, 146},
    {138, 146, 140},
    {148, 168, 147},
    {148, 147, 149},
    {149, 147, 256},
    {149, 256, 150},
    {150, 256, 255},
    {150, 255, 151},
    {151, 255, 254},
    {151, 254, 152},
    {254, 153, 152},
    {254, 155, 153},
    {155, 154, 153},
    {155, 250, 154},
    {250, 156, 154},
    {250, 266, 156},
    {266, 159, 156},
    {266, 157, 159},
    {157, 264, 158},
    {264, 161, 158},
    {264, 262, 161},
    {262, 160, 161},
    {262, 162, 160},
    {162, 163, 160},
    {162, 261, 163},
    {163, 261, 165},
    {163, 165, 164},
    {164, 165, 260},
    {164, 260, 166},
    {166, 260, 259},
    {166, 259, 167},
    {167, 259, 168},
    {167, 168, 148},
    {173, 272, 271},
    {173, 169, 272},
    {173, 170, 169},
    {173, 171, 170},
    {173, 172, 171},
    {173, 275, 172},
    {173, 276, 275},
    {173, 174, 276},
    {173, 176, 174},
    {173, 175, 176},
    {173, 267, 175},
    {173, 268, 267},
    {173, 177, 268},
    {173, 269, 177},
    {81, 101, 102},
    {81, 195, 101},
    {101, 195, 178},
    {101, 178, 103},
    {103, 178, 194},
    {103, 194, 80},
    {179, 142, 180},
    {179, 180, 181},
    {180, 183, 181},
    {180, 182, 183},
    {184, 183, 182},
    {184, 186, 183},
    {188, 186, 184},
    {188, 185, 186},
    {187, 185, 188},
    {187, 189, 185},
    {189, 187, 190},
    {189, 190, 191},
    {190, 192, 191},
    {190, 193, 192},
    {193, 314, 192},
    {193, 134, 314},
    {194, 75, 133},
    {194, 178, 75},
    {195, 75, 178},
    {195, 73, 75},
    {81, 73, 195},
    {81, 72, 73},
    {230, 345, 324},
    {230, 324, 227},
    {324, 225, 227},
    {324, 327, 225},
    {327, 196, 225},
    {327, 328, 196},
    {328, 221, 196},
    {328, 330, 221},
    {330, 198, 221},
    {330, 197, 198},
    {197, 218, 198},
    {197, 331, 218},
    {218, 331, 332},
    {218, 332, 219},
    {332, 214, 219},
    {332, 333, 214},
    {214, 333, 199},
    {214, 199, 215},
    {215, 199, 334},
    {215, 334, 211},
    {211, 334, 336},
    {211, 336, 200},
    {200, 336, 338},
    {200, 338, 208},
    {208, 338, 339},
    {208, 339, 206},
    {339, 201, 206},
    {339, 342, 201},
    {342, 232, 201},
    {342, 343, 232},
    {232, 343, 345},
    {232, 345, 230},
    {131, 82, 202},
    {131, 67, 82},
    {82, 67, 203},
    {82, 203, 204},
    {205, 201, 231},
    {205, 206, 201},
    {207, 206, 205},
    {207, 208, 206},
    {209, 208, 207},
    {209, 200, 208},
    {210, 200, 209},
    {210, 211, 200},
    {213, 211, 210},
    {213, 215, 211},
    {212, 215, 213},
    {212, 214, 215},
    {216, 214, 212},
    {216, 219, 214},
    {217, 219, 216},
    {220, 218, 217},
    {220, 198, 218},
    {222, 198, 220},
    {222, 221, 198},
    {223, 221, 222},
    {223, 196, 221},
    {224, 196, 223},
    {224, 225, 196},
    {226, 225, 224},
    {226, 227, 225},
    {228, 227, 226},
    {228, 230, 227},
    {229, 230, 228},
    {229, 232, 230},
    {231, 232, 229},
    {231, 201, 232},
    {251, 234, 233},
    {251, 123, 234},
    {252, 123, 251},
    {252, 236, 123},
    {237, 236, 252},
    {237, 235, 236},
    {126, 235, 237},
    {126, 237, 253},
    {128, 126, 253},
    {128, 253, 238},
    {106, 128, 238},
    {106, 238, 239},
    {241, 106, 239},
    {241, 239, 240},
    {109, 241, 240},
    {109, 240, 258},
    {242, 109, 258},
    {242, 258, 257},
    {111, 242, 257},
    {111, 257, 243},
    {245, 111, 243},
    {245, 243, 244},
    {263, 245, 244},
    {263, 113, 245},
    {246, 113, 263},
    {246, 247, 113},
    {248, 247, 246},
    {248, 120, 247},
    {265, 120, 248},
    {265, 249, 120},
    {233, 249, 265},
    {233, 234, 249},
    {250, 233, 266},
    {250, 251, 233},
    {155, 251, 250},
    {155, 252, 251},
    {237, 252, 155},
    {237, 155, 254},
    {253, 237, 254},
    {253, 254, 255},
    {238, 253, 255},
    {238, 255, 256},
    {147, 238, 256},
    {147, 239, 238},
    {240, 239, 147},
    {240, 147, 168},
    {258, 240, 168},
    {258, 168, 259},
    {257, 258, 259},
    {257, 259, 260},
    {243, 257, 260},
    {243, 260, 165},
    {244, 243, 165},
    {244, 165, 261},
    {162, 244, 261},
    {162, 263, 244},
    {262, 263, 162},
    {262, 246, 263},
    {264, 246, 262},
    {264, 248, 246},
    {157, 248, 264},
    {157, 265, 248},
    {266, 265, 157},
    {266, 233, 265},
    {312, 267, 268},
    {312, 268, 286},
    {286, 268, 177},
    {286, 177, 288},
    {177, 290, 288},
    {177, 269, 290},
    {290, 269, 173},
    {290, 173, 270},
    {270, 173, 271},
    {270, 271, 293},
    {293, 271, 272},
    {293, 272, 273},
    {273, 272, 169},
    {273, 169, 296},
    {169, 274, 296},
    {169, 170, 274},
    {274, 170, 171},
    {274, 171, 300},
    {300, 171, 172},
    {300, 172, 302},
    {302, 172, 275},
    {302, 275, 304},
    {275, 307, 304},
    {275, 276, 307},
    {276, 308, 307},
    {276, 174, 308},
    {174, 277, 308},
    {174, 176, 277},
    {176, 310, 277},
    {176, 175, 310},
    {310, 175, 267},
    {310, 267, 312},
    {285, 87, 88},
    {74, 285, 88},
    {71, 285, 74},
    {71, 278, 285},
    {278, 71, 279},
    {281, 278, 279},
    {281, 280, 278},
    {79, 280, 281},
    {79, 282, 280},
    {280, 282, 283},
    {280, 283, 284},
    {284, 283, 78},
    {284, 78, 87},
    {285, 284, 87},
    {284, 285, 278},
    {284, 278, 280},
    {313, 312, 286},
    {313, 286, 287},
    {287, 286, 288},
    {287, 288, 289},
    {289, 288, 290},
    {289, 290, 291},
    {291, 290, 270},
    {291, 270, 292},
    {292, 270, 293},
    {292, 293, 294},
    {294, 293, 273},
    {294, 273, 295},
    {295, 273, 296},
    {295, 296, 297},
    {296, 299, 297},
    {296, 274, 299},
    {274, 298, 299},
    {274, 300, 298},
    {300, 301, 298},
    {300, 302, 301},
    {302, 303, 301},
    {302, 304, 303},
    {304, 306, 303},
    {304, 307, 306},
    {307, 305, 306},
    {307, 308, 305},
    {308, 309, 305},
    {308, 277, 309},
    {277, 311, 309},
    {277, 310, 311},
    {311, 310, 312},
    {134, 319, 314},
    {134, 315, 319},
    {315, 316, 319},
    {315, 317, 316},
    {317, 318, 316},
    {317, 137, 318},
    {137, 322, 318},
    {137, 139, 322},
    {17, 322, 139},
    {17, 139, 141},
    {314, 143, 179},
    {314, 319, 143},
    {319, 320, 143},
    {319, 316, 320},
    {316, 145, 320},
    {316, 318, 145},
    {318, 321, 145},
    {318, 322, 321},
    {146, 321, 322},
    {146, 322, 17},
    {323, 324, 345},
    {323, 325, 324},
    {325, 327, 324},
    {325, 326, 327},
    {327, 326, 38},
    {327, 38, 328},
    {38, 330, 328},
    {38, 329, 330},
    {330, 329, 34},
    {330, 34, 197},
    {34, 331, 197},
    {34, 30, 331},
    {331, 30, 42},
    {331, 42, 332},
    {42, 333, 332},
    {42, 48, 333},
    {333, 48, 49},
    {333, 49, 199},
    {49, 334, 199},
    {49, 335, 334},
    {334, 335, 53},
    {334, 53, 336},
    {53, 338, 336},
    {53, 337, 338},
    {338, 337, 340},
    {338, 340, 339},
    {339, 340, 341},
    {339, 341, 342},
    {341, 343, 342},
    {341, 344, 343},
    {343, 344, 323},
    {343, 323, 345},
    };
    // clang-format on

    ScoutJawModel* jaw;

    ScoutHeadModel(IDrzEngine* engine) : engine(engine), Model(&verts, &faces)  {
      //Load model tri and faces
      SetupModel();
    }

    void Update(float elapsedTime) override {
      //sub parts update
      //TODO
      
      // Rotation Z
      matRotZ.m[0][0] = cosf(fTheta);
      matRotZ.m[0][1] = sinf(fTheta);
      matRotZ.m[1][0] = -sinf(fTheta);
      matRotZ.m[1][1] = cosf(fTheta);
      matRotZ.m[2][2] = 1;
      matRotZ.m[3][3] = 1;

      // Rotation X
      matRotX.m[0][0] = 1;
      matRotX.m[1][1] = cosf(fTheta * 0.5f);
      matRotX.m[1][2] = sinf(fTheta * 0.5f);
      matRotX.m[2][1] = -sinf(fTheta * 0.5f);
      matRotX.m[2][2] = cosf(fTheta * 0.5f);
    }  

  private:
    IDrzEngine* engine;
    float fTheta = 2*3.14159f;
};
